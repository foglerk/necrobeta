{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://OCR/webpack/universalModuleDefinition","webpack://OCR/external umd {\"root\":\"A1lib\",\"commonjs\":\"@alt1/base\",\"commonjs2\":\"@alt1/base\",\"amd\":\"@alt1/base\"}","webpack://OCR/webpack/bootstrap","webpack://OCR/webpack/runtime/compat get default export","webpack://OCR/webpack/runtime/define property getters","webpack://OCR/webpack/runtime/hasOwnProperty shorthand","webpack://OCR/webpack/runtime/make namespace object","webpack://OCR/./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@alt1/base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@alt1/base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@alt1/ocr\"] = factory(require(\"@alt1/base\"));\n\telse\n\t\troot[\"OCR\"] = factory(root[\"A1lib\"]);\n})((typeof self!='undefined'?self:this), (__WEBPACK_EXTERNAL_MODULE__1__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ImageData, RectLike, Rect } from \"@alt1/base\";\r\n\r\nexport type TextFragment = {\r\n\ttext: string,\r\n\tcolor: ColortTriplet,\r\n\tindex: number,\r\n\txstart: number,\r\n\txend: number\r\n};\r\nexport type Charinfo = {\r\n\twidth: number,\r\n\tchr: string,\r\n\tbonus: number,\r\n\tsecondary: boolean,\r\n\tpixels: number[]\r\n};\r\nexport type FontDefinition = {\r\n\tchars: Charinfo[],\r\n\twidth: number,\r\n\tspacewidth: number,\r\n\tshadow: boolean,\r\n\theight: number,\r\n\tbasey: number,\r\n\tminrating?: number,\r\n\tmaxspaces?: number\r\n};\r\nexport type ColortTriplet = [number, number, number];\r\n\r\nexport var debug = {\r\n\tprintcharscores: false,\r\n\ttrackread: false\r\n};\r\n\r\ntype Chardebug = { chr: string, rawscore: number, score: number, img: ImageData };\r\nexport var debugout = {} as { [id: string]: Chardebug[] };\r\n\r\n/**\r\n * draws the font definition to a buffer and displays it in the dom for debugging purposes\r\n * @param font\r\n */\r\nexport function debugFont(font: FontDefinition) {\r\n\tvar spacing = font.width + 2;\r\n\tvar buf = new ImageData(spacing * font.chars.length, font.height + 1);\r\n\tfor (var a = 0; a < buf.data.length; a += 4) {\r\n\t\tbuf.data[a] = buf.data[a + 1] = buf.data[a + 2] = 0;\r\n\t\tbuf.data[a + 3] = 255;\r\n\t}\r\n\tfor (var a = 0; a < font.chars.length; a++) {\r\n\t\tvar bx = a * spacing;\r\n\t\tvar chr = font.chars[a];\r\n\t\tfor (var b = 0; b < chr.pixels.length; b += (font.shadow ? 4 : 3)) {\r\n\t\t\tbuf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 2], chr.pixels[b + 2], chr.pixels[b + 2], 255]);\r\n\t\t\tif (font.shadow) {\r\n\t\t\t\tbuf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 3], 0, 0, 255]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tbuf.show()\r\n}\r\n\r\nexport function unblendBlackBackground(img: ImageData, r: number, g: number, b: number) {\r\n\tvar rimg = new ImageData(img.width, img.height);\r\n\tfor (var i = 0; i < img.data.length; i += 4) {\r\n\t\tvar col = decomposeblack(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b);\r\n\t\trimg.data[i + 0] = col[0] * 255;\r\n\t\trimg.data[i + 1] = rimg.data[i + 0];\r\n\t\trimg.data[i + 2] = rimg.data[i + 0];\r\n\t\trimg.data[i + 3] = 255;\r\n\t}\r\n\treturn rimg;\r\n}\r\n\r\n/**\r\n * unblends a imagebuffer into match strength with given color\r\n * the bgimg argument should contain a second image with pixel occluded by the font visible.\r\n * @param img \r\n * @param shadow detect black as second color\r\n * @param bgimg optional second image to \r\n */\r\nexport function unblendKnownBg(img: ImageData, bgimg: ImageData, shadow: boolean, r: number, g: number, b: number) {\r\n\tif (bgimg && (img.width != bgimg.width || img.height != bgimg.height)) { throw \"bgimg size doesn't match\"; }\r\n\tvar rimg = new ImageData(img.width, img.height);\r\n\tvar totalerror = 0;\r\n\tfor (var i = 0; i < img.data.length; i += 4) {\r\n\t\tvar col = decompose2col(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b, bgimg.data[i + 0], bgimg.data[i + 1], bgimg.data[i + 2]);\r\n\t\tif (shadow) {\r\n\t\t\tif (col[2] > 0.01) { console.log(\"high error component: \" + (col[2] * 100).toFixed(1) + \"%\"); }\r\n\t\t\ttotalerror += col[2];\r\n\t\t\tvar m = 1 - col[1] - Math.abs(col[2]);//main color+black=100%-bg-error\r\n\t\t\trimg.data[i + 0] = m * 255;\r\n\t\t\trimg.data[i + 1] = col[0] / m * 255;\r\n\t\t\trimg.data[i + 2] = rimg.data[i + 0];\r\n\t\t} else {\r\n\t\t\trimg.data[i + 0] = col[0] * 255;\r\n\t\t\trimg.data[i + 1] = rimg.data[i + 0];\r\n\t\t\trimg.data[i + 2] = rimg.data[i + 0];\r\n\t\t}\r\n\t\trimg.data[i + 3] = 255;\r\n\t}\r\n\treturn rimg;\r\n}\r\n\r\n/**\r\n * Unblends a font image that is already conpletely isolated to the raw image used ingame. This is the easiest mode for pixel fonts where alpha is 0 or 255, or for extracted font files.\r\n * @param img\r\n * @param r\r\n * @param g\r\n * @param b\r\n * @param shadow whether the font has a black shadow\r\n */\r\nexport function unblendTrans(img: ImageData, shadow: boolean, r: number, g: number, b: number) {\r\n\tvar rimg = new ImageData(img.width, img.height);\r\n\tvar pxlum = r + g + b;\r\n\tfor (var i = 0; i < img.data.length; i += 4) {\r\n\t\tif (shadow) {\r\n\t\t\tvar lum = img.data[i + 0] + img.data[i + 1] + img.data[i + 2];\r\n\t\t\trimg.data[i + 0] = img.data[i + 3];\r\n\t\t\trimg.data[i + 1] = lum / pxlum * 255;\r\n\t\t\trimg.data[i + 2] = rimg.data[i + 0];\r\n\t\t} else {\r\n\t\t\trimg.data[i + 0] = img.data[i + 3];\r\n\t\t\trimg.data[i + 1] = rimg.data[i + 0];\r\n\t\t\trimg.data[i + 2] = rimg.data[i + 0];\r\n\t\t}\r\n\t\trimg.data[i + 3] = 255;\r\n\t}\r\n\treturn rimg;\r\n}\r\n\r\n/**\r\n * Determised wether color [rgb]m can be a result of a blend with color [rgb]1 that is p (0-1) of the mix\r\n * It returns the number that the second color has to lie outside of the possible color ranges\r\n * @param rm resulting color\r\n * @param r1 first color of the mix (the other color is unknown)\r\n * @param p the portion of the [rgb]1 in the mix (0-1)\r\n */\r\nexport function canblend(rm: number, gm: number, bm: number, r1: number, g1: number, b1: number, p: number) {\r\n\tvar m = Math.min(50, p / (1 - p));\r\n\tvar r = rm + (rm - r1) * m;\r\n\tvar g = gm + (gm - g1) * m;\r\n\tvar b = bm + (bm - b1) * m;\r\n\treturn Math.max(0, -r, -g, -b, r - 255, g - 255, b - 255);\r\n}\r\n\r\n\r\n/**\r\n * decomposes a color in 2 given component colors and returns the amount of each color present\r\n * also return a third (noise) component which is the the amount leftover orthagonal from the 2 given colors\r\n */\r\nexport function decompose2col(rp: number, gp: number, bp: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number) {\r\n\t//get the normal of the error (cross-product of both colors)\r\n\tvar r3 = g1 * b2 - g2 * b1;\r\n\tvar g3 = b1 * r2 - b2 * r1;\r\n\tvar b3 = r1 * g2 - r2 * g1;\r\n\r\n\t//normalize to length 255\r\n\tvar norm = 255 / Math.sqrt(r3 * r3 + g3 * g3 + b3 * b3);\r\n\tr3 *= norm;\r\n\tg3 *= norm;\r\n\tb3 *= norm;\r\n\r\n\treturn decompose3col(rp, gp, bp, r1, g1, b1, r2, g2, b2, r3, g3, b3);\r\n}\r\n\r\n/**\r\n * decomposes a pixel in a given color component and black and returns what proportion of the second color it contains\r\n * this is not as formal as decompose 2/3 and only give a \"good enough\" number\r\n */\r\nexport function decomposeblack(rp: number, gp: number, bp: number, r1: number, g1: number, b1: number) {\r\n\tvar dr = Math.abs(rp - r1);\r\n\tvar dg = Math.abs(gp - g1);\r\n\tvar db = Math.abs(bp - b1);\r\n\tvar maxdif = Math.max(dr, dg, db);\r\n\treturn [1 - maxdif / 255];\r\n}\r\n\r\n/**\r\n * decomposes a color in 3 given component colors and returns the amount of each color present\r\n */\r\nexport function decompose3col(rp: number, gp: number, bp: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, r3: number, g3: number, b3: number) {\r\n\t//P=x*C1+y*C2+z*C3\r\n\t//assemble as matrix \r\n\t//M*w=p\r\n\t//get inverse of M\r\n\t//dirty written out version of cramer's rule\r\n\tvar A = g2 * b3 - b2 * g3;\r\n\tvar B = g3 * b1 - b3 * g1;\r\n\tvar C = g1 * b2 - b1 * g2;\r\n\r\n\tvar D = b2 * r3 - r2 * b3;\r\n\tvar E = b3 * r1 - r3 * b1;\r\n\tvar F = b1 * r2 - r1 * b2;\r\n\r\n\tvar G = r2 * g3 - g2 * r3;\r\n\tvar H = r3 * g1 - g3 * r1;\r\n\tvar I = r1 * g2 - g1 * r2;\r\n\r\n\tvar det = r1 * A + g1 * D + b1 * G;\r\n\r\n\t//M^-1*p=w\r\n\tvar x = (A * rp + D * gp + G * bp) / det;\r\n\tvar y = (B * rp + E * gp + H * bp) / det;\r\n\tvar z = (C * rp + F * gp + I * bp) / det;\r\n\r\n\treturn [x, y, z];\r\n}\r\n\r\n/**\r\n * brute force to the exact position of the text\r\n */\r\nexport function findChar(buffer: ImageData, font: FontDefinition, col: ColortTriplet, x: number, y: number, w: number, h: number) {\r\n\tif (x < 0) { return null; }\r\n\tif (y - font.basey < 0) { return null; }\r\n\tif (x + w + font.width > buffer.width) { return null; }\r\n\tif (y + h - font.basey + font.height > buffer.height) { return null; }\r\n\r\n\tvar best = 1000;//TODO finetune score constants\r\n\tvar bestchar: ReadCharInfo | null = null;\r\n\tfor (var cx = x; cx < x + w; cx++) {\r\n\t\tfor (var cy = y; cy < y + h; cy++) {\r\n\t\t\tvar chr = readChar(buffer, font, col, cx, cy, false, false);\r\n\t\t\tif (chr != null && chr.sizescore < best) {\r\n\t\t\t\tbest = chr.sizescore;\r\n\t\t\t\tbestchar = chr;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn bestchar;\r\n}\r\n\r\n/**\r\n * reads text with unknown exact coord or color. The given coord should be inside the text\r\n * color selection not implemented yet\r\n */\r\nexport function findReadLine(buffer: ImageData, font: FontDefinition, cols: ColortTriplet[], x: number, y: number, w = -1, h = -1) {\r\n\tif (w == -1) { w = font.width + font.spacewidth; x -= Math.ceil(w / 2); }\r\n\tif (h == -1) { h = 7; y -= 1; }\r\n\tvar chr: ReturnType<typeof findChar> = null;\r\n\tif (cols.length > 1) {\r\n\t\t//TODO use getChatColor() instead for non-mono?\r\n\t\tvar sorted = GetChatColorMono(buffer, new Rect(x, y - font.basey, w, h), cols);\r\n\t\t//loop until we have a match (max 2 cols)\r\n\t\tfor (var a = 0; a < 2 && a < sorted.length && chr == null; a++) {\r\n\t\t\tchr = findChar(buffer, font, sorted[a].col, x, y, w, h);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tchr = findChar(buffer, font, cols[0], x, y, w, h);\r\n\t}\r\n\tif (chr == null) { return { debugArea: { x, y, w, h }, text: \"\", fragments: [] } as ReturnType<typeof readLine>; }\r\n\treturn readLine(buffer, font, cols, chr.x, chr.y, true, true);\r\n}\r\n\r\nexport function GetChatColorMono(buf: ImageData, rect: RectLike, colors: ColortTriplet[]) {\r\n\tvar colormap = colors.map(c => ({ col: c, score: 0 }));\r\n\tif (rect.x < 0 || rect.y < 0 || rect.x + rect.width > buf.width || rect.y + rect.height > buf.height) { return colormap; }\r\n\tvar data = buf.data;\r\n\tvar maxd = 50;\r\n\tfor (var colobj of colormap) {\r\n\t\tvar score = 0;\r\n\t\tvar col = colobj.col;\r\n\t\tfor (var y = rect.y; y < rect.y + rect.height; y++) {\r\n\t\t\tfor (var x = rect.x; x < rect.x + rect.width; x++) {\r\n\t\t\t\tvar i = x * 4 + y * 4 * buf.width;\r\n\t\t\t\tvar d = Math.abs(data[i] - col[0]) + Math.abs(data[i + 1] - col[1]) + Math.abs(data[i + 2] - col[2]);\r\n\t\t\t\tif (d < maxd) { score += maxd - d; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolobj.score = score;\r\n\t}\r\n\treturn colormap.sort((a, b) => b.score - a.score);\r\n}\r\n\r\n\r\nfunction unblend(r: number, g: number, b: number, R: number, G: number, B: number) {\r\n\tvar m = Math.sqrt(r * r + g * g + b * b);\r\n\tvar n = Math.sqrt(R * R + G * G + B * B);\r\n\r\n\tvar x = (r * R + g * G + b * B) / n;\r\n\tvar y = Math.sqrt(Math.max(0, m * m - x * x));\r\n\r\n\tvar r1 = Math.max(0, (63.75 - y) * 4);\r\n\tvar r2 = x / n * 255;\r\n\r\n\tif (r2 > 255)//brighter than refcol\r\n\t{\r\n\t\tr1 = Math.max(0, r1 - r2 + 255);\r\n\t\tr2 = 255;\r\n\t}\r\n\r\n\treturn [r1, r2];\r\n}\r\n\r\n\r\nexport function getChatColor(buf: ImageData, rect: RectLike, colors: ColortTriplet[]) {\r\n\tvar bestscore = -1.0;\r\n\tvar best: null | ColortTriplet = null;\r\n\tvar b2 = 0.0;\r\n\tvar data = buf.data;\r\n\tfor (let col of colors) {\r\n\t\tvar score = 0.0;\r\n\t\tfor (var y = rect.y; y < rect.y + rect.height; y++) {\r\n\t\t\tfor (var x = rect.x; x < rect.x + rect.width; x++) {\r\n\t\t\t\tif (x < 0 || x + 1 >= buf.width) { continue; }\r\n\t\t\t\tif (y < 0 || y + 1 >= buf.width) { continue; }\r\n\t\t\t\tlet i1 = buf.pixelOffset(x, y);\r\n\t\t\t\tlet i2 = buf.pixelOffset(x + 1, y + 1);\r\n\t\t\t\tvar pixel1 = unblend(data[i1 + 0], data[i1 + 1], data[i1 + 2], col[0], col[1], col[2]);\r\n\t\t\t\tvar pixel2 = unblend(data[i2 + 0], data[i2 + 1], data[i2 + 2], col[0], col[1], col[2]);\r\n\t\t\t\t//TODO this is from c# can simplify a bit\r\n\t\t\t\tvar s = (pixel1[0] / 255 * pixel1[1] / 255) * (pixel2[0] / 255 * (255.0 - pixel2[1]) / 255);\r\n\t\t\t\tscore += s;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (score > bestscore) { b2 = bestscore; bestscore = score; best = col; }\r\n\t\telse if (score > b2) { b2 = score; }\r\n\t}\r\n\t//Console.WriteLine(\"color: \" + bestcol + \" - \" + (bestscore - b2));\r\n\t//bestscore /= rect.width * rect.height;\r\n\treturn best;\r\n}\r\n\r\n/**\r\n * reads a line of text with exactly known position and color. y should be the y coord of the text base line, x should be the first pixel of a new character\r\n */\r\nexport function readLine(buffer: ImageData, font: FontDefinition, colors: ColortTriplet | ColortTriplet[], x: number, y: number, forward: boolean, backward = false) {\r\n\tif (typeof colors[0] != \"number\" && colors.length == 1) { colors = colors[0] as ColortTriplet; }\r\n\tvar multicol = typeof colors[0] != \"number\";\r\n\tvar allcolors: ColortTriplet[] = multicol ? colors as ColortTriplet[] : [colors as ColortTriplet];\r\n\r\n\tvar detectcolor = function (sx: number, sy: number, backward: boolean) {\r\n\t\tvar w = Math.floor(font.width * 1.5);\r\n\t\tif (backward) { sx -= w; }\r\n\t\tsy -= font.basey;\r\n\t\treturn getChatColor(buffer, { x: sx, y: sy, width: w, height: font.height }, allcolors);\r\n\t}\r\n\r\n\tvar fragments: TextFragment[] = [];\r\n\tvar x1 = x;\r\n\tvar x2 = x;\r\n\tvar maxspaces = (typeof font.maxspaces == \"number\" ? font.maxspaces : 1);\r\n\r\n\tlet fragtext = \"\";\r\n\tlet fraghadprimary = false;\r\n\tvar lastcol: ColortTriplet | null = null;\r\n\tlet addfrag = (forward: boolean) => {\r\n\t\tif (!fragtext) { return; }\r\n\t\tlet frag: TextFragment = {\r\n\t\t\ttext: fragtext,\r\n\t\t\tcolor: lastcol!,\r\n\t\t\tindex: 0,\r\n\t\t\txstart: x + (forward ? fragstartdx : fragenddx),\r\n\t\t\txend: x + (forward ? fragenddx : fragstartdx)\r\n\t\t};\r\n\t\tif (forward) { fragments.push(frag); }\r\n\t\telse { fragments.unshift(frag); }\r\n\t\tfragtext = \"\";\r\n\t\tfragstartdx = dx;\r\n\t\tfraghadprimary = false;\r\n\t}\r\n\r\n\tfor (var dirforward of [true, false]) {\r\n\t\t//init vars\r\n\t\tif (dirforward && !forward) { continue; }\r\n\t\tif (!dirforward && !backward) { continue; }\r\n\r\n\t\tvar dx = 0;\r\n\t\tvar fragstartdx = dx;\r\n\t\tvar fragenddx = dx;\r\n\t\tvar triedspaces = 0;\r\n\t\tvar triedrecol = false;\r\n\t\tvar col = multicol ? null : colors as ColortTriplet;\r\n\r\n\t\twhile (true) {\r\n\t\t\tcol = col || detectcolor(x + dx, y, !dirforward);\r\n\t\t\tvar chr = (col ? readChar(buffer, font, col, x + dx, y, !dirforward, true) : null);\r\n\t\t\tif (col == null || chr == null) {\r\n\t\t\t\tif (triedspaces < maxspaces) {\r\n\t\t\t\t\tdx += (dirforward ? 1 : -1) * font.spacewidth;\r\n\t\t\t\t\ttriedspaces++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (multicol && !triedrecol && fraghadprimary) {\r\n\t\t\t\t\tdx -= (dirforward ? 1 : -1) * triedspaces * font.spacewidth;\r\n\t\t\t\t\ttriedspaces = 0;\r\n\t\t\t\t\tcol = null;\r\n\t\t\t\t\ttriedrecol = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (dirforward) { x2 = x + dx - font.spacewidth; }\r\n\t\t\t\telse { x1 = x + dx + font.spacewidth; }\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tif (lastcol && (col[0] != lastcol[0] || col[1] != lastcol[1] || col[2] != lastcol[2])) {\r\n\t\t\t\t\taddfrag(dirforward);\r\n\t\t\t\t}\r\n\t\t\t\tvar spaces = \"\";\r\n\t\t\t\tfor (var a = 0; a < triedspaces; a++) { spaces += \" \"; }\r\n\t\t\t\tif (dirforward) { fragtext += spaces + chr.chr; }\r\n\t\t\t\telse { fragtext = chr.chr + spaces + fragtext; }\r\n\t\t\t\tif (!chr.basechar.secondary) { fraghadprimary = true; }\r\n\t\t\t\ttriedspaces = 0;\r\n\t\t\t\ttriedrecol = false;\r\n\t\t\t\tdx += (dirforward ? 1 : -1) * chr.basechar.width;\r\n\t\t\t\tfragenddx = dx;\r\n\t\t\t\tlastcol = col;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lastcol && fraghadprimary) { addfrag(dirforward); }\r\n\t}\r\n\r\n\tfragments.forEach((f, i) => f.index = i);\r\n\r\n\treturn {\r\n\t\tdebugArea: { x: x1, y: y - 9, w: x2 - x1, h: 10 },\r\n\t\ttext: fragments.map(f => f.text).join(\"\"),\r\n\t\tfragments\r\n\t};\r\n}\r\n\r\n/**\r\n * Reads a line of text that uses a smallcaps font, these fonts can have duplicate chars that only have a different amount of \r\n * empty space after the char before the next char starts. \r\n * The coordinates should be near the end of the string, or a rectangle with high 1 containing all points where the string can end.\r\n */\r\nexport function readSmallCapsBackwards(buffer: ImageData, font: FontDefinition, cols: ColortTriplet[], x: number, y: number, w = -1, h = -1) {\r\n\tif (w == -1) { w = font.width + font.spacewidth; x -= Math.ceil(w / 2); }\r\n\tif (h == -1) { h = 7; y -= 1; }\r\n\tvar matchedchar: ReadCharInfo | null = null;\r\n\tvar sorted = (cols.length == 1 ? [{ col: cols[0], score: 1 }] : GetChatColorMono(buffer, new Rect(x, y - font.basey, w, h), cols));\r\n\t//loop until we have a match (max 2 cols)\r\n\tfor (var a = 0; a < 2 && a < sorted.length && matchedchar == null; a++) {\r\n\t\tfor (var cx = x + w - 1; cx >= x; cx--) {\r\n\t\t\tvar best = 1000;//TODO finetune score constants\r\n\t\t\tvar bestchar: ReadCharInfo | null = null;\r\n\t\t\tfor (var cy = y; cy < y + h; cy++) {\r\n\t\t\t\tvar chr = readChar(buffer, font, sorted[a].col, cx, cy, true, false);\r\n\t\t\t\tif (chr != null && chr.sizescore < best) {\r\n\t\t\t\t\tbest = chr.sizescore;\r\n\t\t\t\t\tbestchar = chr;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestchar) {\r\n\t\t\t\tmatchedchar = bestchar;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (matchedchar == null) { return { text: \"\", debugArea: { x, y, w, h } }; }\r\n\treturn readLine(buffer, font, cols, matchedchar.x, matchedchar.y, false, true);\r\n}\r\n/**\r\n * Reads a single character at the exact given location\r\n * @param x exact x location of the start of the character domain (includes part of the spacing between characters)\r\n * @param y exact y location of the baseline pixel of the character\r\n * @param backwards read in backwards direction, the x location should be the first pixel after the character domain in that case\r\n */\r\nexport function readChar(buffer: ImageData, font: FontDefinition, col: ColortTriplet, x: number, y: number, backwards: boolean, allowSecondary?: boolean): ReadCharInfo | null {\r\n\ty -= font.basey;\r\n\tvar shiftx = 0;\r\n\tvar shifty = font.basey;\r\n\tvar shadow = font.shadow;\r\n\tvar debugobj: Chardebug[] | null = null;\r\n\tvar debugimg: ImageData | null = null;\r\n\tif (debug.trackread) {\r\n\t\tvar name = x + \";\" + y + \" \" + JSON.stringify(col);\r\n\t\tif (!debugout[name]) { debugout[name] = []; }\r\n\t\tdebugobj = debugout[name];\r\n\t}\r\n\r\n\t//===== make sure the full domain is inside the bitmap/buffer ======\r\n\tif (y < 0 || y + font.height >= buffer.height) { return null; }\r\n\tif (!backwards) {\r\n\t\tif (x < 0 || x + font.width > buffer.width) { return null; }\r\n\t}\r\n\telse {\r\n\t\tif (x - font.width < 0 || x > buffer.width) { return null; }\r\n\t}\r\n\r\n\t//====== start reading the char ======\r\n\tvar scores: { score: number, sizescore: number, chr: Charinfo }[] = [];\r\n\tfor (var chr = 0; chr < font.chars.length; chr++) {\r\n\t\tvar chrobj = font.chars[chr];\r\n\t\tif (chrobj.secondary && !allowSecondary) { continue; }\r\n\t\tscores[chr] = { score: 0, sizescore: 0, chr: chrobj };\r\n\t\tvar chrx = (backwards ? x - chrobj.width : x);\r\n\r\n\r\n\t\tif (debug.trackread) {\r\n\t\t\tdebugimg = new ImageData(font.width, font.height);\r\n\t\t}\r\n\r\n\t\tfor (var a = 0; a < chrobj.pixels.length;) {\r\n\t\t\tvar i = (chrx + chrobj.pixels[a]) * 4 + (y + chrobj.pixels[a + 1]) * buffer.width * 4;\r\n\t\t\tvar penalty = 0;\r\n\t\t\tif (!shadow) {\r\n\t\t\t\tpenalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0], col[1], col[2], chrobj.pixels[a + 2] / 255);\r\n\t\t\t\ta += 3;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar lum = chrobj.pixels[a + 3] / 255;\r\n\t\t\t\tpenalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0] * lum, col[1] * lum, col[2] * lum, chrobj.pixels[a + 2] / 255);\r\n\t\t\t\ta += 4;\r\n\t\t\t}\r\n\t\t\tscores[chr].score += Math.max(0, penalty);\r\n\t\t\t//TODO add compiler flag to this to remove it for performance\r\n\t\t\tif (debugimg) { debugimg.setPixel(chrobj.pixels[a], chrobj.pixels[a + 1], [penalty, penalty, penalty, 255]); }\r\n\t\t}\r\n\t\tscores[chr].sizescore = scores[chr].score - chrobj.bonus;\r\n\t\tif (debugobj) { debugobj.push({ chr: chrobj.chr, score: scores[chr].sizescore, rawscore: scores[chr].score, img: debugimg! }); }\r\n\t}\r\n\r\n\tscores.sort((a, b) => a.sizescore - b.sizescore);\r\n\r\n\tif (debug.printcharscores) {\r\n\t\tscores.slice(0, 5).forEach(q => console.log(q.chr.chr, q.score.toFixed(3), q.sizescore.toFixed(3)));\r\n\t}\r\n\r\n\tvar winchr = scores[0];\r\n\tif (!winchr || winchr.score > 400) { return null; }\r\n\r\n\treturn { chr: winchr.chr.chr, basechar: winchr.chr, x: x + shiftx, y: y + shifty, score: winchr.score, sizescore: winchr.sizescore };\r\n}\r\nexport type ReadCharInfo = { chr: string, basechar: Charinfo, x: number, y: number, score: number, sizescore: number };\r\n\r\n/**\r\n * Generates a font json description to use in reader functions\r\n * @param unblended A source image with all characters lined up. The image should be unblended into components using the unblend functions\r\n * The lowest pixel line of this image is used to mark the location and size of the charecters if the red component is 255 it means there is a character on that pixel column\r\n * @param chars A string containing all the characters of the image in the same order\r\n * @param seconds A string with characters that are considered unlikely and should only be detected if no other character is possible.\r\n * For example the period (.) character matches positive inside many other characters and should be marked as secondary\r\n * @param bonusses An object that contains bonus scores for certain difficult characters to make the more likely to be red.\r\n * @param basey The y position of the baseline pixel of the font\r\n * @param spacewidth the number of pixels a space takes\r\n * @param treshold minimal color match proportion (0-1) before a pixel is used for the font\r\n * @param shadow whether this font also uses the black shadow some fonts have. The \"unblended\" image should be unblended correspondingly\r\n * @returns a javascript object describing the font which is used as input for the different read functions\r\n */\r\nexport function generatefont(unblended: ImageData, chars: string, seconds: string, bonusses: { [char: string]: number }, basey: number, spacewidth: number, treshold: number, shadow: boolean): FontDefinition {\r\n\t//settings vars\r\n\ttreshold *= 255;\r\n\r\n\t//initial vars\r\n\tvar miny = unblended.height - 1;\r\n\tvar maxy = 0;\r\n\tvar font = { chars: [] as Charinfo[], width: 0, spacewidth: spacewidth, shadow: shadow, height: 0, basey: 0 };\r\n\tvar ds: false | number = false;\r\n\r\n\ttype internalcharinfo = Charinfo & { ds: number, de: number };\r\n\r\n\tvar chardata: internalcharinfo[] = [];\r\n\t//index all chars\r\n\tfor (var dx = 0; dx < unblended.width; dx++) {\r\n\t\tvar i = 4 * dx + 4 * unblended.width * (unblended.height - 1);\r\n\r\n\t\tif (unblended.data[i] == 255 && unblended.data[i + 3] == 255) {\r\n\t\t\tif (ds === false) { ds = dx; }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (ds !== false) {\r\n\t\t\t\t//char found, start detection\r\n\t\t\t\tvar de = dx;\r\n\t\t\t\tvar char = chars[chardata.length];\r\n\t\t\t\tvar chr: internalcharinfo = {\r\n\t\t\t\t\tds: ds,\r\n\t\t\t\t\tde: de,\r\n\t\t\t\t\twidth: de - ds,\r\n\t\t\t\t\tchr: char,\r\n\t\t\t\t\tbonus: (bonusses && bonusses[char]) || 0,\r\n\t\t\t\t\tsecondary: seconds.indexOf(chars[chardata.length]) != -1,\r\n\t\t\t\t\tpixels: []\r\n\t\t\t\t};\r\n\t\t\t\tchardata.push(chr);\r\n\t\t\t\tfont.width = Math.max(font.width, chr.width);\r\n\r\n\t\t\t\tfor (x = 0; x < de - ds; x++) {\r\n\t\t\t\t\tfor (y = 0; y < unblended.height - 1; y++) {\r\n\t\t\t\t\t\tvar i = (x + ds) * 4 + y * unblended.width * 4;\r\n\t\t\t\t\t\tif (unblended.data[i] >= treshold) {\r\n\t\t\t\t\t\t\tminy = Math.min(miny, y);\r\n\t\t\t\t\t\t\tmaxy = Math.max(maxy, y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tds = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfont.height = maxy + 1 - miny;\r\n\tfont.basey = basey - miny;\r\n\r\n\t//detect all pixels\r\n\tfor (var a in chardata) {\r\n\t\tvar chr = chardata[a];\r\n\t\tfor (var x = 0; x < chr.width; x++) {\r\n\t\t\tfor (var y = 0; y < maxy + 1 - miny; y++) {\r\n\t\t\t\tvar i = (x + chr.ds) * 4 + (y + miny) * unblended.width * 4;\r\n\t\t\t\tif (unblended.data[i] >= treshold) {\r\n\t\t\t\t\tchr.pixels.push(x, y);\r\n\t\t\t\t\tchr.pixels.push(unblended.data[i]);\r\n\t\t\t\t\tif (shadow) { chr.pixels.push(unblended.data[i + 1]); }\r\n\t\t\t\t\tchr.bonus += 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//prevent js from doing the thing with unnecessary output precision\r\n\t\tchr.bonus = +chr.bonus.toFixed(3);\r\n\r\n\t\tfont.chars.push({ width: chr.width, bonus: chr.bonus, chr: chr.chr, pixels: chr.pixels, secondary: chr.secondary });\r\n\t}\r\n\r\n\treturn font;\r\n}\r\n"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","debug","printcharscores","trackread","debugout","debugFont","font","spacing","width","buf","ImageData","chars","length","height","data","bx","chr","b","pixels","shadow","setPixel","show","unblendBlackBackground","img","g","rimg","i","col","decomposeblack","unblendKnownBg","bgimg","decompose2col","console","log","toFixed","m","Math","abs","unblendTrans","pxlum","lum","canblend","rm","gm","bm","r1","g1","b1","p","min","max","rp","gp","bp","r2","g2","b2","r3","g3","b3","norm","sqrt","decompose3col","dr","dg","db","A","D","G","det","findChar","buffer","x","y","w","h","basey","best","bestchar","cx","cy","readChar","sizescore","findReadLine","cols","spacewidth","ceil","sorted","GetChatColorMono","Rect","debugArea","text","fragments","readLine","rect","colors","colormap","map","c","score","colobj","sort","unblend","R","B","getChatColor","bestscore","i1","pixelOffset","i2","pixel1","pixel2","forward","backward","multicol","allcolors","detectcolor","sx","sy","floor","x1","x2","maxspaces","fragtext","fraghadprimary","lastcol","addfrag","frag","color","index","xstart","fragstartdx","fragenddx","xend","push","unshift","dx","dirforward","triedspaces","triedrecol","spaces","basechar","secondary","forEach","f","join","readSmallCapsBackwards","matchedchar","backwards","allowSecondary","shifty","debugobj","debugimg","name","JSON","stringify","scores","chrobj","chrx","penalty","bonus","rawscore","slice","q","winchr","generatefont","unblended","seconds","bonusses","treshold","miny","maxy","ds","chardata","de","char","indexOf"],"sourceRoot":""}